kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: video-portal-pv-claim
  labels:
    app: video-portal
spec:
  storageClassName: fastdata-hostpath
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: video-portal
spec:
  replicas: 1
  selector:
    matchLabels:
      app: video-portal
  template:
    metadata:
      labels:
        app: video-portal
    spec:
      containers:
      - name: video-portal
        image: docker.io/gulianglily/video-portal:0.9.2
        command: ["/bin/sh", "-c"]
        args:
        - "ls -al && sleep 5 && python3 manage.py makemigrations videoplayer  && sleep 10 && python3 manage.py migrate && sleep 10 && python3 manage.py runserver 0.0.0.0:8000"
        ports:
        - containerPort: 8000
        volumeMounts:
        - name: code-volume
          mountPath: /media
        - name: kubeconfig
          mountPath: /root/.kube/
          readOnly: true
        env:
          - name: MINIO_ENDPOINT
            value: "minio.microk8s.hhii.ampere"
          - name: MINIO_ACCESS_KEY
            value: "xxxxxx"
          - name: MINIO_SECRET_KEY
            value: "xxxxxx"
          - name: MINIO_BUCKET_NAME
            value: "vpp-dst"
          - name: MINIO_SRC_BUCKET_NAME
            value: "vpp-src"
          - name: MINIO_DST_BUCKET_NAME
            value: "vpp-dst"
          - name: DJANGO_ALLOWED_HOSTS
            value: "demo.mk8s.hhii.ampere,xxxxxx,127.0.0.1,0.0.0.0"
          - name: DB_NAME
            value: "postgres"
          - name: DB_USER
            value: "postgres"
          - name: DB_PASSWORD
            value: "xxxxx"
          - name: DB_HOST
            value: "xxx"
          - name: DB_PORT
            value: "3xxx"
          - name: VIDEO_PROCESS_NAMESPACE
            value: "process-ns"
          - name: VOD_POC_NAMESPACE
            value: "vod-poc"
          - name: CPU_LIMITS
            value: "80"
          - name: CPU_REQUESTS
            value: "30"

      volumes:
        - name: code-volume
          persistentVolumeClaim:
            claimName: video-portal-pv-claim
        - name: kubeconfig
          configMap:
            defaultMode: 420
            name: kubeconfig-file-configmap
---
apiVersion: v1
kind: Service
metadata:
  name: video-portal-service
spec:
  selector:
    app: video-portal
  type: NodePort
  ports:
    - nodePort: 32080
      protocol: TCP
      port: 8000
      targetPort: 8000
      
---
#apiVersion: networking.k8s.io/v1
#kind: Ingress
#metadata:
#  name: video-potral-ingress
#spec:
#  rules:
#  - host: demo.mk8snode4.hhii.ampere
#    http:
#      paths:
#      - path: /
#        pathType: Prefix
#        backend:
#          service:
#            name: video-poral-service
#            port:
#              number: 8000
